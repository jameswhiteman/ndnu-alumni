/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0-master-9110d1e
 */
!function(){"use strict";function t(t){function e(e,i){return e.append(r),function(e,i,n,o){i.addClass("md-chip"),t(i),o&&angular.element(i[0].querySelector(".md-chip-content")).on("blur",function(){o.selectedChip=-1})}}return{restrict:"E",require:"^?mdChips",compile:e}}function e(t){function e(e,i,n,o){i.on("click",function(t){e.$apply(function(){o.removeChip(e.$$replacedScope.$index)})}),t(function(){i.attr({tabindex:-1,ariaHidden:!0}),i.find("button").attr("tabindex","-1")})}return{restrict:"A",require:"^mdChips",scope:!1,link:e}}function i(t,e){function i(e,i,n){var o=e.$parent.$mdChipsCtrl,s=o.parent.$new(!1,o.parent);s.$$replacedScope=e,s.$chip=e.$chip,s.$mdChipsCtrl=o,i.html(o.$scope.$eval(n.mdChipTransclude)),t(i.contents())(s)}return{restrict:"EA",terminal:!0,link:i,scope:!1}}function n(t,e,i,n,o){this.$timeout=o,this.$mdConstant=e,this.$scope=t,this.parent=t.$parent,this.$log=i,this.$element=n,this.ngModelCtrl=null,this.userInputNgModelCtrl=null,this.userInputElement=null,this.items=[],this.selectedChip=-1,this.deleteHint="Press delete to remove this chip.",this.deleteButtonLabel="Remove",this.chipBuffer="",this.useMdOnAppend=!1}function o(t,e,i,n,o){function s(s,c){function r(t){if(c.ngModel){var e=p[0].querySelector(t);return e&&e.outerHTML}}var p=c.$mdUserTemplate;c.$mdUserTemplate=null;var a=r("md-chips>*[md-chip-remove]")||h,m=r("md-chips>md-chip-template")||d,u=r("md-chips>md-autocomplete")||r("md-chips>input")||l,C=p.find("md-chip");return p[0].querySelector("md-chip-template>*[md-chip-remove]")&&n.warn("invalid placement of md-chip-remove within md-chip-template."),function(n,s,r,p){e.initOptionalProperties(n,c),t(s);var d=p[0];if(d.chipContentsTemplate=m,d.chipRemoveTemplate=a,d.chipInputTemplate=u,s.attr({ariaHidden:!0,tabindex:-1}).on("focus",function(){d.onFocus()}),c.ngModel&&(d.configureNgModel(s.controller("ngModel")),r.mdOnAppend&&d.useMdOnAppendExpression(),u!=l&&o(function(){0===u.indexOf("<md-autocomplete")&&d.configureAutocomplete(s.find("md-autocomplete").controller("mdAutocomplete")),d.configureUserInput(s.find("input"))})),C.length>0){var h=i(C)(n.$parent);o(function(){s.find("md-chips-wrap").prepend(h)})}}}return{template:function(t,e){return e.$mdUserTemplate=t.clone(),p},require:["mdChips"],restrict:"E",controller:"MdChipsCtrl",controllerAs:"$mdChipsCtrl",bindToController:!0,compile:s,scope:{readonly:"=readonly",placeholder:"@",secondaryPlaceholder:"@",mdOnAppend:"&",deleteHint:"@",deleteButtonLabel:"@",requireMatch:"=?mdRequireMatch"}}}function s(){this.selectedItem=null,this.searchText=""}function c(t,e){function i(i,n){return function(i,o,s,c){e.initOptionalProperties(i,n),t(o),o.attr("tabindex","-1")}}return{template:function(t,e){return a},restrict:"E",controller:"MdContactChipsCtrl",controllerAs:"$mdContactChipsCtrl",bindToController:!0,compile:i,scope:{contactQuery:"&mdContacts",placeholder:"@",secondaryPlaceholder:"@",contactName:"@mdContactName",contactImage:"@mdContactImage",contactEmail:"@mdContactEmail",contacts:"=ngModel",requireMatch:"=?mdRequireMatch"}}}angular.module("material.components.chips",["material.core","material.components.autocomplete"]),angular.module("material.components.chips").directive("mdChip",t);var r='    <span ng-if="!$mdChipsCtrl.readonly" class="md-visually-hidden">      {{$mdChipsCtrl.deleteHint}}    </span>';t.$inject=["$mdTheming"],angular.module("material.components.chips").directive("mdChipRemove",e),e.$inject=["$timeout"],angular.module("material.components.chips").directive("mdChipTransclude",i),i.$inject=["$compile","$mdUtil"],angular.module("material.components.chips").controller("MdChipsCtrl",n),n.$inject=["$scope","$mdConstant","$log","$element","$timeout"],n.prototype.inputKeydown=function(t){var e=this.getChipBuffer();switch(t.keyCode){case this.$mdConstant.KEY_CODE.ENTER:if(this.$scope.requireMatch||!e)break;t.preventDefault(),this.appendChip(e),this.resetChipBuffer();break;case this.$mdConstant.KEY_CODE.BACKSPACE:if(e)break;t.stopPropagation(),this.items.length&&this.selectAndFocusChipSafe(this.items.length-1)}},n.prototype.chipKeydown=function(t){if(!this.getChipBuffer())switch(t.keyCode){case this.$mdConstant.KEY_CODE.BACKSPACE:case this.$mdConstant.KEY_CODE.DELETE:if(this.selectedChip<0)return;t.preventDefault(),this.removeAndSelectAdjacentChip(this.selectedChip);break;case this.$mdConstant.KEY_CODE.LEFT_ARROW:t.preventDefault(),this.selectedChip<0&&(this.selectedChip=this.items.length),this.items.length&&this.selectAndFocusChipSafe(this.selectedChip-1);break;case this.$mdConstant.KEY_CODE.RIGHT_ARROW:t.preventDefault(),this.selectAndFocusChipSafe(this.selectedChip+1);break;case this.$mdConstant.KEY_CODE.ESCAPE:case this.$mdConstant.KEY_CODE.TAB:if(this.selectedChip<0)return;t.preventDefault(),this.onFocus()}},n.prototype.getPlaceholder=function(){var t=this.items.length&&(""==this.secondaryPlaceholder||this.secondaryPlaceholder);return t?this.placeholder:this.secondaryPlaceholder},n.prototype.removeAndSelectAdjacentChip=function(t){var e=this.getAdjacentChipIndex(t);this.removeChip(t),this.$timeout(function(){this.selectAndFocusChipSafe(e)}.bind(this))},n.prototype.resetSelectedChip=function(){this.selectedChip=-1},n.prototype.getAdjacentChipIndex=function(t){var e=this.items.length-1;return 0==e?-1:t==e?t-1:t},n.prototype.appendChip=function(t){this.items.indexOf(t)+1||(this.useMdOnAppend&&this.mdOnAppend&&(t=this.mdOnAppend({$chip:t})),this.items.push(t))},n.prototype.useMdOnAppendExpression=function(){this.useMdOnAppend=!0},n.prototype.getChipBuffer=function(){return this.userInputElement?this.userInputNgModelCtrl?this.userInputNgModelCtrl.$viewValue:this.userInputElement[0].value:this.chipBuffer},n.prototype.resetChipBuffer=function(){this.userInputElement?this.userInputNgModelCtrl?(this.userInputNgModelCtrl.$setViewValue(""),this.userInputNgModelCtrl.$render()):this.userInputElement[0].value="":this.chipBuffer=""},n.prototype.removeChip=function(t){this.items.splice(t,1)},n.prototype.removeChipAndFocusInput=function(t){this.removeChip(t),this.onFocus()},n.prototype.selectAndFocusChipSafe=function(t){return this.items.length?t===this.items.length?this.onFocus():(t=Math.max(t,0),t=Math.min(t,this.items.length-1),this.selectChip(t),void this.focusChip(t)):(this.selectChip(-1),void this.onFocus())},n.prototype.selectChip=function(t){t>=-1&&t<=this.items.length?this.selectedChip=t:this.$log.warn("Selected Chip index out of bounds; ignoring.")},n.prototype.selectAndFocusChip=function(t){this.selectChip(t),-1!=t&&this.focusChip(t)},n.prototype.focusChip=function(t){this.$element[0].querySelector('md-chip[index="'+t+'"] .md-chip-content').focus()},n.prototype.configureNgModel=function(t){this.ngModelCtrl=t;var e=this;t.$render=function(){e.items=e.ngModelCtrl.$viewValue}},n.prototype.onFocus=function(){var t=this.$element[0].querySelector("input");t&&t.focus(),this.resetSelectedChip()},n.prototype.onInputFocus=function(){this.inputHasFocus=!0,this.resetSelectedChip()},n.prototype.onInputBlur=function(){this.inputHasFocus=!1},n.prototype.configureUserInput=function(t){this.userInputElement=t;var e=t.controller("ngModel");e!=this.ngModelCtrl&&(this.userInputNgModelCtrl=e);var i=this.$scope,n=this;t.attr({tabindex:0}).on("keydown",function(t){i.$apply(function(){n.inputKeydown(t)})}).on("focus",n.onInputFocus.bind(n)).on("blur",n.onInputBlur.bind(n))},n.prototype.configureAutocomplete=function(t){t.registerSelectedItemWatcher(function(t){t&&(this.appendChip(t),this.resetChipBuffer())}.bind(this)),this.$element.find("input").on("focus",this.onInputFocus.bind(this)).on("blur",this.onInputBlur.bind(this))},n.prototype.hasFocus=function(){return this.inputHasFocus||this.selectedChip>=0},angular.module("material.components.chips").directive("mdChips",o);var p='    <md-chips-wrap        ng-if="!$mdChipsCtrl.readonly || $mdChipsCtrl.items.length > 0"        ng-keydown="$mdChipsCtrl.chipKeydown($event)"        ng-class="{ \'md-focused\': $mdChipsCtrl.hasFocus() }"        class="md-chips">      <md-chip ng-repeat="$chip in $mdChipsCtrl.items"          index="{{$index}}"          ng-class="{\'md-focused\': $mdChipsCtrl.selectedChip == $index}">        <div class="md-chip-content"            tabindex="-1"            aria-hidden="true"            ng-focus="!$mdChipsCtrl.readonly && $mdChipsCtrl.selectChip($index)"            md-chip-transclude="$mdChipsCtrl.chipContentsTemplate"></div>        <div class="md-chip-remove-container"            md-chip-transclude="$mdChipsCtrl.chipRemoveTemplate"></div>      </md-chip>      <div ng-if="!$mdChipsCtrl.readonly && $mdChipsCtrl.ngModelCtrl"          class="md-chip-input-container"          md-chip-transclude="$mdChipsCtrl.chipInputTemplate"></div>      </div>    </md-chips-wrap>',l='      <input          tabindex="0"          placeholder="{{$mdChipsCtrl.getPlaceholder()}}"          aria-label="{{$mdChipsCtrl.getPlaceholder()}}"          ng-model="$mdChipsCtrl.chipBuffer"          ng-focus="$mdChipsCtrl.onInputFocus()"          ng-blur="$mdChipsCtrl.onInputBlur()"          ng-keydown="$mdChipsCtrl.inputKeydown($event)">',d="    <span>{{$chip}}</span>",h='    <button        class="md-chip-remove"        ng-if="!$mdChipsCtrl.readonly"        ng-click="$mdChipsCtrl.removeChipAndFocusInput($$replacedScope.$index)"        type="button"        aria-hidden="true"        tabindex="-1">      <md-icon md-svg-icon="md-close"></md-icon>      <span class="md-visually-hidden">        {{$mdChipsCtrl.deleteButtonLabel}}      </span>    </button>';o.$inject=["$mdTheming","$mdUtil","$compile","$log","$timeout"],angular.module("material.components.chips").controller("MdContactChipsCtrl",s),s.prototype.queryContact=function(t){var e=this.contactQuery({$query:t});return e.filter(this.filterSelectedContacts.bind(this))},s.prototype.filterSelectedContacts=function(t){return-1==this.contacts.indexOf(t)},angular.module("material.components.chips").directive("mdContactChips",c);var a='    <md-chips class="md-contact-chips"        ng-model="$mdContactChipsCtrl.contacts"        md-require-match="$mdContactChipsCtrl.requireMatch"        md-autocomplete-snap>        <md-autocomplete            md-menu-class="md-contact-chips-suggestions"            md-selected-item="$mdContactChipsCtrl.selectedItem"            md-search-text="$mdContactChipsCtrl.searchText"            md-items="item in $mdContactChipsCtrl.queryContact($mdContactChipsCtrl.searchText)"            md-item-text="$mdContactChipsCtrl.mdContactName"            md-no-cache="true"            md-autoselect            placeholder="{{$mdContactChipsCtrl.contacts.length == 0 ?                $mdContactChipsCtrl.placeholder : $mdContactChipsCtrl.secondaryPlaceholder}}">          <div class="md-contact-suggestion">            <img                 ng-src="{{item[$mdContactChipsCtrl.contactImage]}}"                alt="{{item[$mdContactChipsCtrl.contactName]}}" />            <span class="md-contact-name" md-highlight-text="$mdContactChipsCtrl.searchText">              {{item[$mdContactChipsCtrl.contactName]}}            </span>            <span class="md-contact-email" >{{item[$mdContactChipsCtrl.contactEmail]}}</span>          </div>        </md-autocomplete>        <md-chip-template>          <div class="md-contact-avatar">            <img                 ng-src="{{$chip[$mdContactChipsCtrl.contactImage]}}"                alt="{{$chip[$mdContactChipsCtrl.contactName]}}" />          </div>          <div class="md-contact-name">            {{$chip[$mdContactChipsCtrl.contactName]}}          </div>        </md-chip-template>    </md-chips>';c.$inject=["$mdTheming","$mdUtil"]}();